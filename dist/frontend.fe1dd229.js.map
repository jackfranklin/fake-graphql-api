{"version":3,"sources":["person.graphql","get-person.ts","index.ts"],"names":["module","exports"],"mappings":";AAAAA,OAAOC,QAAQ,CACL,KAAA,WACO,YAAA,CACb,CACU,KAAA,sBACK,UAAA,QACL,KAAA,CACE,KAAA,OACC,MAAA,UAEY,oBAAA,CACrB,CACU,KAAA,qBACI,SAAA,CACF,KAAA,WACA,KAAA,CACE,KAAA,OACC,MAAA,OAGL,KAAA,CACE,KAAA,YACA,KAAA,CACE,KAAA,OACC,MAAA,QAGC,WAAA,KAGJ,WAAA,GACE,aAAA,CACN,KAAA,eACM,WAAA,CACZ,CACU,KAAA,QACA,KAAA,CACE,KAAA,OACC,MAAA,UAEE,UAAA,CACX,CACU,KAAA,WACA,KAAA,CACE,KAAA,OACC,MAAA,MAEF,MAAA,CACC,KAAA,WACA,KAAA,CACE,KAAA,OACC,MAAA,SAKH,WAAA,GACE,aAAA,CACN,KAAA,eACM,WAAA,CACZ,CACU,KAAA,QACA,KAAA,CACE,KAAA,OACC,MAAA,QAEE,UAAA,GACC,WAAA,WASvB,IAAA,CACI,MAAA,EACF,IAAA;;AC3EE,aAAA,IAAA,EAAA,MAAA,KAAA,iBAAA,SAAA,GAAA,OAAA,GAAA,EAAA,WAAA,EAAA,CAAA,QAAA,IAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAHb,IAAA,EAAA,EAAA,QAAA,qBAGa,QAAA,UAAY,SAAC,GAClB,IAAA,EAAoC,CACxC,GAAI,GAGC,OAAA,MAAM,WAAY,CACvB,OAAQ,OACR,KAAM,KAAK,UAAU,CACnB,MAAK,EAAA,QACL,UAAW,MAEZ,KAAK,SAAA,GAEC,OADP,QAAQ,IAAI,WAAY,GACjB,CACL,OAAQ;;ACbd,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAJA,IAAA,EAAA,QAAA,gBAEA,QAAQ,IAAI,gBAEZ,EAAA,UAAU","file":"frontend.fe1dd229.js","sourceRoot":"../frontend","sourcesContent":["module.exports={\n  \"kind\": \"Document\",\n  \"definitions\": [\n    {\n      \"kind\": \"OperationDefinition\",\n      \"operation\": \"query\",\n      \"name\": {\n        \"kind\": \"Name\",\n        \"value\": \"Person\"\n      },\n      \"variableDefinitions\": [\n        {\n          \"kind\": \"VariableDefinition\",\n          \"variable\": {\n            \"kind\": \"Variable\",\n            \"name\": {\n              \"kind\": \"Name\",\n              \"value\": \"id\"\n            }\n          },\n          \"type\": {\n            \"kind\": \"NamedType\",\n            \"name\": {\n              \"kind\": \"Name\",\n              \"value\": \"Int\"\n            }\n          },\n          \"directives\": []\n        }\n      ],\n      \"directives\": [],\n      \"selectionSet\": {\n        \"kind\": \"SelectionSet\",\n        \"selections\": [\n          {\n            \"kind\": \"Field\",\n            \"name\": {\n              \"kind\": \"Name\",\n              \"value\": \"person\"\n            },\n            \"arguments\": [\n              {\n                \"kind\": \"Argument\",\n                \"name\": {\n                  \"kind\": \"Name\",\n                  \"value\": \"id\"\n                },\n                \"value\": {\n                  \"kind\": \"Variable\",\n                  \"name\": {\n                    \"kind\": \"Name\",\n                    \"value\": \"id\"\n                  }\n                }\n              }\n            ],\n            \"directives\": [],\n            \"selectionSet\": {\n              \"kind\": \"SelectionSet\",\n              \"selections\": [\n                {\n                  \"kind\": \"Field\",\n                  \"name\": {\n                    \"kind\": \"Name\",\n                    \"value\": \"name\"\n                  },\n                  \"arguments\": [],\n                  \"directives\": []\n                }\n              ]\n            }\n          }\n        ]\n      }\n    }\n  ],\n  \"loc\": {\n    \"start\": 0,\n    \"end\": 60\n  }\n};","import query from './person.graphql'\nimport { Person, PersonVariables } from './__generated__/Person'\n\nexport const getPerson = (id: number): Promise<Person> => {\n  const graphQlVariables: PersonVariables = {\n    id: id,\n  }\n\n  return fetch('/graphql', {\n    method: 'POST',\n    body: JSON.stringify({\n      query,\n      variables: graphQlVariables,\n    }),\n  }).then(response => {\n    console.log('got here', response)\n    return {\n      person: null,\n    }\n  })\n}\n","import { getPerson } from './get-person'\n\nconsole.log('hello world!')\n\ngetPerson(1)\n"]}